@echo off
REM üîß ÌîÑÎ°úÏ†ùÌä∏ Î£®Ìä∏ Í≤ΩÎ°ú ÏßÅÏ†ë ÏÑ§Ï†ï (Ï†ïÎØºÏù¥ PC Í∏∞Ï§Ä)
set PROJECT_ROOT=C:\Users\USER\team-noise-ai-project
set PROJECT_ROOT_UNIX=C:/Users/USER/team-noise-ai-project
set IMAGE_NAME=tf-noise-preprocess
set CONTAINER_NAME=noise-runner
set DOCKERFILE=docker/Dockerfile
set MLFLOW_TRACKING_URI=http://210.101.236.174:5000

REM üîß mlruns ÎîîÎ†âÌÜ†Î¶¨Í∞Ä ÏóÜÏúºÎ©¥ ÏÉùÏÑ±
if not exist "%PROJECT_ROOT%\mlruns" (
    echo [Info] Creating 'mlruns' directory...
    mkdir "%PROJECT_ROOT%\mlruns"
)

REM üü¢ Ïª®ÌÖåÏù¥ÎÑàÍ∞Ä Ïù¥ÎØ∏ Ïã§Ìñâ Ï§ëÏù∏ÏßÄ ÌôïÏù∏
docker inspect -f "{{.State.Running}}" %CONTAINER_NAME% 2>nul | findstr "true" >nul
if %errorlevel%==0 (
    echo [Info] Container "%CONTAINER_NAME%" is already running.
    echo [Info] Attaching to the container...
    docker exec -it %CONTAINER_NAME% bash
    goto end
)

REM üîÅ Ïª®ÌÖåÏù¥ÎÑàÍ∞Ä Ï°¥Ïû¨ÌïòÏßÄÎßå Ï§ëÏßÄ ÏÉÅÌÉúÏùº Í≤ΩÏö∞
docker ps -a --format "{{.Names}}" | findstr /i %CONTAINER_NAME% >nul
if %errorlevel%==0 (
    echo [Info] Restarting stopped container "%CONTAINER_NAME%"...
    docker start %CONTAINER_NAME%
    timeout /t 3 >nul
    docker exec -d %CONTAINER_NAME% bash -c "mlflow ui --host 0.0.0.0 --port 5000"
    docker exec -it %CONTAINER_NAME% bash
    goto end
)

REM üõ†Ô∏è ÏÉàÎ°ú Ïù¥ÎØ∏ÏßÄ ÎπåÎìú Î∞è Ïª®ÌÖåÏù¥ÎÑà ÏÉùÏÑ±
echo [Step 1/3] Building Docker image...
docker build -t %IMAGE_NAME% -f %DOCKERFILE% %PROJECT_ROOT%

echo [Step 2/3] Creating and starting the container...
docker run --name %CONTAINER_NAME% -it ^
    -p 5000:5000 ^
    -v %PROJECT_ROOT_UNIX%:/app ^
    -v %PROJECT_ROOT_UNIX%/mlruns:/app/mlruns ^
    -w /app ^
    -e MLFLOW_TRACKING_URI=%MLFLOW_TRACKING_URI% ^
    %IMAGE_NAME% ^
    bash -c "mlflow ui --host 0.0.0.0 --port 5000 & bash"

:end
echo.
echo [Info] MLflow UI available at: %MLFLOW_TRACKING_URI%
pause